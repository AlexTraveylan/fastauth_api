"""Init

Revision ID: 388336f8fa75
Revises:
Create Date: 2024-09-23 23:58:09.545828

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel  # NEW

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "388336f8fa75"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "api_key",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("application_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("plan", sa.Enum("FREE", "BASIC", "PREMIUM", name="planenum"), nullable=False),
        sa.Column("api_key", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("api_key"),
    )
    op.create_table(
        "domains",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("url", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("api_key_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["api_key_id"], ["api_key.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("url"),
    )
    op.create_table(
        "subscriptions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("stripe_transaction_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("api_key_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("status", sa.Enum("PENDING", "SUCCESS", "FAILED", name="paymentstatus"), nullable=False),
        sa.ForeignKeyConstraint(
            ["api_key_id"],
            ["api_key.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("password", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("api_key_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["api_key_id"], ["api_key.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "user_email",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("encoded_email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("token", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_email")
    op.drop_table("users")
    op.drop_table("subscriptions")
    op.drop_table("domains")
    op.drop_table("api_key")
    # ### end Alembic commands ###

    op.execute("DROP TYPE IF EXISTS planenum")
    op.execute("DROP TYPE IF EXISTS paymentstatus")
